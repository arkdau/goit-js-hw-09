{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAcC,SAASC,cAAc,SACrCC,EAAc,CAClBC,MAAO,EACPC,KAAM,EACNC,OAAQ,GAIV,SAASC,EAAcC,EAAUJ,GAkB/B,OAdW,IAAIK,SAAQ,SAACC,EAASC,GACTC,KAAKC,SAAW,GAEpCC,YAAW,WAETJ,EAAQ,CAAEF,WAAUJ,S,GACnBA,GAEHU,YAAW,WACT,IAAMC,EAAM,IAAIC,MAAM,kBAAiCC,OAAfT,EAAS,QAAYS,OAANb,EAAM,QAC7DO,EAAOI,E,GACNX,E,IAMTJ,EAAYkB,iBAAiB,UAAU,SAACC,GACtCA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfnB,EAAYC,MAAoC,EAA5BiB,EAAKE,SAASnB,MAAMoB,MACxCrB,EAAYE,KAAkC,EAA3BgB,EAAKE,SAASlB,KAAKmB,MACtCrB,EAAYG,OAAsC,EAA7Be,EAAKE,SAASjB,OAAOkB,MAC1C,IAAK,IAAIC,EAAM,EAAGA,EAAMtB,EAAYG,OAAQmB,GAAO,EACjDlB,EAAckB,EAAM,EAAGtB,EAAYC,MAASqB,EAAMtB,EAAYE,MAC3DqB,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUJ,EAAKuB,EAALvB,MACjBwB,QAAQC,IAAI,qBAAoCZ,OAAfT,EAAS,QAAYS,OAANb,EAAM,QACtDN,EAAAgC,OAAOC,QAAQ,qBAAoCd,OAAfT,EAAS,QAAYS,OAANb,EAAM,O,IACxD4B,OAAM,SAACjB,GACRa,QAAQC,IAAId,EAAIkB,SAChBnC,EAAAgC,OAAOI,QAAQnB,EAAIkB,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formPromise = document.querySelector('.form');\nconst DataPromise = {\n  delay: 0,\n  step: 0,\n  amount: 0,\n};\n// let promise;\n\nfunction createPromise(position, delay) {\n  // console.log('position', position);\n  // console.log('delay', delay);\n\n  const pr = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      setTimeout(() => {\n        // resolve(`Fulfilled promise ${position} in ${delay} ms`);\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      setTimeout(() => {\n        const err = new Error(`Reject Promise ${position} in ${delay} ms`);\n        reject(err);\n      }, delay);\n    }\n  });\n  return pr;\n}\n\nformPromise.addEventListener('submit', (e) => {\n  e.preventDefault();\n  const form = e.currentTarget;\n  DataPromise.delay = form.elements.delay.value * 1;\n  DataPromise.step = form.elements.step.value * 1;\n  DataPromise.amount = form.elements.amount.value * 1;\n  for (let pos = 0; pos < DataPromise.amount; pos += 1) {\n    createPromise(pos + 1, DataPromise.delay + (pos * DataPromise.step))\n      .then(({ position, delay }) => {\n        console.log(`Fulfilled promise ${position} in ${delay} ms`);\n        Notify.success(`Fulfilled promise ${position} in ${delay} ms`);\n      }).catch((err) => {\n        console.log(err.message);\n        Notify.failure(err.message);\n      });\n  }\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formPromise","document","querySelector","$ce04d3a99e08e73b$var$DataPromise","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","Math","random","setTimeout","err","Error","concat","addEventListener","e","preventDefault","form","currentTarget","elements","value","pos","then","param","console","log","Notify","success","catch","message","failure"],"version":3,"file":"03-promises.dd629978.js.map"}