{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAcC,SAASC,cAAc,SACrCC,EAAc,CAClBC,MAAO,EACPC,KAAM,EACNC,OAAQ,GAIV,SAASC,EAAcC,EAAUJ,GAkB/B,OAdW,IAAIK,SAAQ,CAACC,EAASC,KACTC,KAAKC,SAAW,GAEpCC,YAAW,KAETJ,EAAQ,C,SAAEF,E,MAAUJ,GAAQ,GAC3BA,GAEHU,YAAW,KACT,MAAMC,EAAM,IAAIC,MAAM,kBAAkBR,QAAeJ,QACvDO,EAAOI,EAAI,GACVX,EAAM,G,CAMfJ,EAAYiB,iBAAiB,UAAWC,IACtCA,EAAEC,iBACF,MAAMC,EAAOF,EAAEG,cACflB,EAAYC,MAAoC,EAA5BgB,EAAKE,SAASlB,MAAMmB,MACxCpB,EAAYE,KAAkC,EAA3Be,EAAKE,SAASjB,KAAKkB,MACtCpB,EAAYG,OAAsC,EAA7Bc,EAAKE,SAAShB,OAAOiB,MAC1C,IAAK,IAAIC,EAAM,EAAGA,EAAMrB,EAAYG,OAAQkB,GAAO,EACjDjB,EAAciB,EAAM,EAAGrB,EAAYC,MAASoB,EAAMrB,EAAYE,MAC3DoB,MAAK,EAACjB,SAAEA,EAAQJ,MAAEA,MACjBsB,QAAQC,IAAI,qBAAqBnB,QAAeJ,QAChDN,EAAA8B,OAAOC,QAAQ,qBAAqBrB,QAAeJ,OAAW,IAC7D0B,OAAOf,IACRW,QAAQC,IAAIZ,EAAIgB,SAChBjC,EAAA8B,OAAOI,QAAQjB,EAAIgB,QAAQ,GAC3B","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formPromise = document.querySelector('.form');\nconst DataPromise = {\n  delay: 0,\n  step: 0,\n  amount: 0,\n};\n// let promise;\n\nfunction createPromise(position, delay) {\n  // console.log('position', position);\n  // console.log('delay', delay);\n\n  const pr = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      setTimeout(() => {\n        // resolve(`Fulfilled promise ${position} in ${delay} ms`);\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      setTimeout(() => {\n        const err = new Error(`Reject Promise ${position} in ${delay} ms`);\n        reject(err);\n      }, delay);\n    }\n  });\n  return pr;\n}\n\nformPromise.addEventListener('submit', (e) => {\n  e.preventDefault();\n  const form = e.currentTarget;\n  DataPromise.delay = form.elements.delay.value * 1;\n  DataPromise.step = form.elements.step.value * 1;\n  DataPromise.amount = form.elements.amount.value * 1;\n  for (let pos = 0; pos < DataPromise.amount; pos += 1) {\n    createPromise(pos + 1, DataPromise.delay + (pos * DataPromise.step))\n      .then(({ position, delay }) => {\n        console.log(`Fulfilled promise ${position} in ${delay} ms`);\n        Notify.success(`Fulfilled promise ${position} in ${delay} ms`);\n      }).catch((err) => {\n        console.log(err.message);\n        Notify.failure(err.message);\n      });\n  }\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formPromise","document","querySelector","$47d4ff9957288465$var$DataPromise","delay","step","amount","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","Math","random","setTimeout","err","Error","addEventListener","e","preventDefault","form","currentTarget","elements","value","pos","then","console","log","Notify","success","catch","message","failure"],"version":3,"file":"03-promises.414cce4b.js.map"}